<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions/>
  <description>종목토론방</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.38.0">
      <projectUrl>https://github.com/tztos104/Project_prochat/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3853.vb_a_490d892963">
    <script>node {
        
        
          
            git poll: true, url:&apos;httphttps://github.com/tztos104/Project_prochat.git
        
        
          
            withCredentials([[$class: &apos;UsernamePasswordMultiBinding&apos;,
        
        
          
              credentialsId: &apos;docker-hub&apos;,
        
        
          
              usernameVariable: &apos;DOCKER_USER_ID&apos;, 
        
        
          
              passwordVariable: &apos;DOCKER_USER_PASSWORD&apos;]]) { 
        
        
          
              stage(&apos;Pull&apos;) {
        
        
          
                git &apos;hhttps://github.com/tztos104/Project_prochat.git&apos; 
        
        
          
              }
        
        
          
              stage(&apos;Unit Test&apos;) {}
        
        
          
              stage(&apos;Build&apos;) {
        
        
          
                sh(script: &apos;docker-compose build app&apos;)
        
        
          
              }
        
        
          
              stage(&apos;Tag&apos;) {
        
        
          
                sh(script: &apos;&apos;&apos;docker tag ${DOCKER_USER_ID}/flask \
        
        
          
                              ${DOCKER_USER_ID}/flask:${BUILD_NUMBER}&apos;&apos;&apos;) }
        
        
          
              stage(&apos;Push&apos;) {
        
        
          
                sh(script: &apos;docker login -u ${DOCKER_USER_ID} -p ${DOCKER_USER_PASSWORD}&apos;) 
        
        
          
                sh(script: &apos;docker push ${DOCKER_USER_ID}/flask:${BUILD_NUMBER}&apos;) 
        
        
          
                sh(script: &apos;docker push ${DOCKER_USER_ID}/flask:latest&apos;)
        
        
          
              }
        
        
          
              stage(&apos;Deploy&apos;) {
        
        
          
                sh(script: &apos;docker-compose up -d production&apos;) 
        
        
          
              }
        
        
          
            } 
        
        
          
          }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>